name: 🚀 Deploy OpenScholar API

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  IMAGE: caelusway/open-scholar-inference
  RUNPOD_HOST: mt6rz9fwgoa11u-64411a76@ssh.runpod.io

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4

    - name: 🧪 Quick tests
      run: |
        python -c "
        import ast
        for f in ['main.py', 'handler.py']:
          ast.parse(open(f).read())
        print('✅ Syntax valid')
        "

    - name: 🐳 Docker Login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      continue-on-error: true
      id: docker-login
    
    - name: 🏗️ Build Image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ steps.docker-login.outcome == 'success' }}
        tags: ${{ env.IMAGE }}:latest,${{ env.IMAGE }}:runpod
        platforms: linux/amd64

    - name: 🚀 Deploy to RunPod
      run: |
        if [ -z "${{ secrets.RUNPOD_SSH_KEY }}" ]; then
          echo "⚠️ RunPod SSH key not configured, skipping deployment"
          exit 0
        fi
        echo "${{ secrets.RUNPOD_SSH_KEY }}" > key && chmod 600 key
        ssh -i key -o StrictHostKeyChecking=no ${{ env.RUNPOD_HOST }} '
          cd /workspace
          # Backup and cleanup
          rm -rf openscholar-api-old && mv openscholar-api openscholar-api-old 2>/dev/null || true
          
          # Pull latest image and extract
          docker pull ${{ env.IMAGE }}:latest
          CONTAINER=$(docker create ${{ env.IMAGE }}:latest)
          docker cp $CONTAINER:/app ./openscholar-api
          docker rm $CONTAINER
          
          # Setup environment
          cd openscholar-api
          echo "OPENSCHOLAR_API_KEY=${{ secrets.OPENSCHOLAR_API_KEY }}" > .env
          echo "API_HOST=0.0.0.0" >> .env
          echo "API_PORT=8002" >> .env
          mkdir -p model_cache logs
          
          # Stop old process and start new with PM2
          pm2 stop openscholar-api || true
          pm2 delete openscholar-api || true
          pm2 start ecosystem.config.js
          pm2 save
          
          # Wait and test
          sleep 20
          curl -f http://localhost:8002/health && echo "✅ Deployed successfully!"
        '
        rm key

    - name: 📊 Summary
      if: success()
      run: |
        echo "🎉 **Deployment Complete!**" >> $GITHUB_STEP_SUMMARY
        echo "🌐 **API:** https://mt6rz9fwgoa11u-64411a76-8002.proxy.runpod.net" >> $GITHUB_STEP_SUMMARY