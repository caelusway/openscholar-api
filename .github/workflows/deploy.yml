name: Deploy OpenScholar API

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  IMAGE: caelusway/open-scholar-inference
  RUNPOD_HOST: mt6rz9fwgoa11u-64411a76@ssh.runpod.io

jobs:
  validate-code:
    runs-on: self-hosted
    name: Validate Python Code
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run syntax validation
      run: |
        echo "Validating Python syntax..."
        python3 -c "
        import ast
        for f in ['main.py', 'handler.py']:
          print(f'Checking {f}...')
          ast.parse(open(f).read())
        print('All Python files have valid syntax')
        "


  deploy-to-runpod:
    runs-on: self-hosted
    needs: validate-code
    name: Deploy to RunPod Server
    steps:
    - name: Check SSH key configuration
      run: |
        if [ -z "${{ secrets.RUNPOD_SSH_KEY }}" ]; then
          echo "WARNING: RunPod SSH key not configured, skipping deployment"
          exit 0
        fi
        echo "SSH key configured, proceeding with deployment"

    - name: Prepare SSH connection
      run: |
        echo "Setting up SSH key for RunPod connection..."
        echo "${{ secrets.RUNPOD_SSH_KEY }}" > runpod_key
        chmod 600 runpod_key

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Prepare and upload code
      run: |
        echo "Preparing code for upload..."
        
        echo "Stopping existing PM2 processes on RunPod..."
        ssh -i runpod_key -o StrictHostKeyChecking=no -T ${{ env.RUNPOD_HOST }} "cd /workspace && pm2 stop openscholar-api || echo 'No PM2 process found' && pm2 delete openscholar-api || echo 'No PM2 process to delete'"
        
        echo "Preparing directories on RunPod..."
        ssh -i runpod_key -o StrictHostKeyChecking=no -T ${{ env.RUNPOD_HOST }} "cd /workspace && rm -rf openscholar-api-backup && mv openscholar-api openscholar-api-backup 2>/dev/null || echo 'No existing code to backup' && mkdir -p openscholar-api model_cache logs"
        
        echo "Creating deployment archive..."
        tar -czf deploy.tar.gz --exclude='.git' --exclude='node_modules' --exclude='__pycache__' --exclude='.github' .
        
        echo "Uploading code archive to RunPod..."
        scp -i runpod_key -o StrictHostKeyChecking=no deploy.tar.gz ${{ env.RUNPOD_HOST }}:/workspace/
        
        echo "Extracting code on RunPod..."
        ssh -i runpod_key -o StrictHostKeyChecking=no -T ${{ env.RUNPOD_HOST }} "cd /workspace && tar -xzf deploy.tar.gz -C openscholar-api && rm deploy.tar.gz"

    - name: Install dependencies and setup
      run: |
        echo "Installing dependencies on RunPod..."
        ssh -i runpod_key -o StrictHostKeyChecking=no -T ${{ env.RUNPOD_HOST }} "cd /workspace/openscholar-api && pip3 install -r requirements.txt && which pm2 || npm install -g pm2"

    - name: Start application with PM2
      run: |
        echo "Starting application with PM2..."
        ssh -i runpod_key -o StrictHostKeyChecking=no -T ${{ env.RUNPOD_HOST }} "cd /workspace/openscholar-api && OPENSCHOLAR_API_KEY='${{ secrets.OPENSCHOLAR_API_KEY }}' API_HOST=0.0.0.0 API_PORT=8002 PRODUCTION_MODE=true DEBUG_LOGGING=false pm2 start main.py --name openscholar-api --interpreter python3 && pm2 save"

    - name: Wait for service startup
      run: |
        echo "Waiting for service to start up..."
        sleep 20
        echo "Service startup wait completed"

    - name: Health check
      run: |
        echo "Performing health check..."
        ssh -i runpod_key -o StrictHostKeyChecking=no ${{ env.RUNPOD_HOST }} '
          echo "Testing API health endpoint..."
          if curl -f http://localhost:8002/health; then
            echo "Health check passed - API is responding"
          else
            echo "Health check failed - API not responding"
            exit 1
          fi
        '

    - name: Cleanup SSH key
      if: always()
      run: |
        echo "Cleaning up SSH key file..."
        rm -f runpod_key

    - name: Deployment summary
      if: success()
      run: |
        echo "**Deployment Complete**" >> $GITHUB_STEP_SUMMARY
        echo "**API URL:** https://mt6rz9fwgoa11u-64411a76-8002.proxy.runpod.net" >> $GITHUB_STEP_SUMMARY
        echo "**Status:** Successfully deployed to RunPod" >> $GITHUB_STEP_SUMMARY