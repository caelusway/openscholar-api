name: Deploy OpenScholar API

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  IMAGE: caelusway/open-scholar-inference
  RUNPOD_HOST: root@103.196.86.90
  RUNPOD_PORT: 15434

jobs:
  validate-code:
    runs-on: self-hosted
    name: Validate Python Code
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run syntax validation
      run: |
        echo "Validating Python syntax..."
        python3 -c "
        import ast
        for f in ['main.py', 'handler.py']:
          print(f'Checking {f}...')
          ast.parse(open(f).read())
        print('All Python files have valid syntax')
        "


  deploy-to-runpod:
    runs-on: self-hosted
    needs: validate-code
    name: Deploy to RunPod Server
    steps:
    - name: Check SSH key configuration
      run: |
        if [ -z "${{ secrets.RUNPOD_SSH_KEY }}" ]; then
          echo "WARNING: RunPod SSH key not configured, skipping deployment"
          exit 0
        fi
        echo "SSH key configured, proceeding with deployment"

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Prepare SSH connection and upload code
      run: |
        echo "Setting up SSH key for RunPod connection..."
        mkdir -p ~/.ssh
        echo "${{ secrets.RUNPOD_SSH_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        
        echo "Preparing code for upload..."
        
        echo "Stopping existing Docker container on RunPod..."
        ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no -o LogLevel=ERROR -T -p ${{ env.RUNPOD_PORT }} ${{ env.RUNPOD_HOST }} "docker stop openscholar-api || echo 'No container found'; docker rm openscholar-api || echo 'No container to remove'"
        
        echo "Preparing directories on RunPod..."
        ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no -o LogLevel=ERROR -T -p ${{ env.RUNPOD_PORT }} ${{ env.RUNPOD_HOST }} "cd /workspace; rm -rf openscholar-api-backup; mv openscholar-api openscholar-api-backup 2>/dev/null || echo 'No existing code to backup'; mkdir -p openscholar-api model_cache logs"
        
        echo "Creating deployment archive..."
        tar -czf deploy.tar.gz --warning=no-file-changed --exclude='.git' --exclude='node_modules' --exclude='__pycache__' --exclude='.github' --exclude='deploy.tar.gz' .
        
        echo "Uploading code archive to RunPod..."
        scp -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no -P ${{ env.RUNPOD_PORT }} deploy.tar.gz ${{ env.RUNPOD_HOST }}:/workspace/
        
        echo "Extracting code on RunPod..."
        ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no -T -p ${{ env.RUNPOD_PORT }} ${{ env.RUNPOD_HOST }} "cd /workspace; tar -xzf deploy.tar.gz -C openscholar-api; rm deploy.tar.gz"

    - name: Build and start Docker container
      run: |
        echo "Setting up SSH key..."
        mkdir -p ~/.ssh
        echo "${{ secrets.RUNPOD_SSH_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        
        echo "Building and starting Docker container on RunPod..."
        ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no -T -p ${{ env.RUNPOD_PORT }} ${{ env.RUNPOD_HOST }} "cd /workspace/openscholar-api && docker build -t openscholar-api:latest . && docker run -d --name openscholar-api --restart unless-stopped -p 8002:8002 -e OPENSCHOLAR_API_KEY='${{ secrets.OPENSCHOLAR_API_KEY }}' -e API_HOST=0.0.0.0 -e API_PORT=8002 -e PRODUCTION_MODE=true -e DEBUG_LOGGING=false -v /workspace/model_cache:/app/model_cache -v /workspace/logs:/app/logs openscholar-api:latest"

    - name: Wait for service startup
      run: |
        echo "Waiting for service to start up..."
        sleep 20
        echo "Service startup wait completed"

    - name: Health check
      run: |
        echo "Setting up SSH key..."
        mkdir -p ~/.ssh
        echo "${{ secrets.RUNPOD_SSH_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        
        echo "Performing health check..."
        ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no -T -p ${{ env.RUNPOD_PORT }} ${{ env.RUNPOD_HOST }} "curl -f http://localhost:8002/health && echo 'Health check passed - API is responding' || (echo 'Health check failed - API not responding' && exit 1)"

    - name: Cleanup SSH key
      if: always()
      run: |
        echo "Cleaning up SSH key file..."
        rm -f ~/.ssh/id_ed25519

    - name: Deployment summary
      if: success()
      run: |
        echo "**Deployment Complete**" >> $GITHUB_STEP_SUMMARY
        echo "**API URL:** https://mt6rz9fwgoa11u-64411a76-8002.proxy.runpod.net" >> $GITHUB_STEP_SUMMARY
        echo "**Status:** Successfully deployed to RunPod" >> $GITHUB_STEP_SUMMARY